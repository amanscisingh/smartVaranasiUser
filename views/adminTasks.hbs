<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.5.1/chart.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css">



{{!-- style is here --}}
<style>
    .assign_task_form {
        max-width: 100%;
        margin: auto;
        padding: 20px;
    }
    
    input[type=text],
    select {
        width: 100%;
        padding: 12px 20px;
        margin: 8px 0;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    input[type=submit]:hover {
        background: #000;
    }
    select{
        border: 0.5px solid grey;
    }
</style>


<span style="float: left;">
    <a href="/admin/broadcast" style="text-decoration: none; float: right; margin: 10px; padding: 5px; border: black 1px solid; border-radius: 5px;">Create Broadcast</a>
</span>
<span style="float: right;">
    <a href="/admin/response" style="text-decoration: none; float: right; margin: 10px; padding: 5px; border: black 1px solid; border-radius: 5px">Respond To Queries</a>
</span>
<br>
<h3>Assign Tasks to Employees</h3>

<div class="assign_task_form">
    <form id="assignTaskForm" method="get">
        <select id="employee_name">
            <option value="employee_name">Select Employee</option>
            <option value="610e892074e2c613744415c1">Drako</option>
            <option value="610e8223d07347566cfe9466">Satakshi</option>
        </select>
        <br>
        <select id="zone">
            <option value="zone">Select Zone</option>
        </select>
        <br>
        
        <select id="ward">
            <option value="ward">Select Ward</option>
        </select>
        <br>
        <select id="locality">
            <option value="locality">Select Locality</option>
        </select>
        <br>
        <input id="submitBtn" disabled type="submit" value="Assign Task👍">        
    </form>
    <hr id="shadowedLine">
    <p id="loading">Please wait While the analytics Panel is Loading...</p>

    <div class="canvasElement"><canvas id="myChart" width="100%" height="80%"></canvas></div>
    <br>
    <br>
    <div class="canvasElement"><canvas id="myChart1" width="100%" height="80%"></canvas></div>
    <br>
    <br>
    <div class="canvasElement"><canvas id="myChart2" width="100%" height="80%"></canvas></div>
    <br>
    <br>
    <div class="canvasElement"><canvas id="myChart3" width="100%" height="80%"></canvas></div>
    
</div>



{{!-- script starts here --}}
<script>
    const loading = document.getElementById('loading');
    response = ['Bhelupur', 'Dashaswamedh', 'Varunapar', 'Adampur', 'Kotwali'];
    ele=document.getElementById("zone");
    for (let i = 0; i < response.length; i++) {
        let li=document.createElement('option');
        li.value=response[i];
        li.innerText=response[i];
        ele.appendChild(li);
    }
    
    var allWards = {
        "Bhelupur": ["Raneepur","Virdopur","Naria","Bhelupur","Jolha North","Nevada","Nagwa","Bhaidani","Sunderpur","Shivwala","Nawabganj","Baaghada","Saraisurjan","Jolha South","Bajardiha","Pandey Haweli","Reori Talab","Khojwa"],
        "Dashaswamedh" : ["Shivpurwa","Madanpura","Sigra","Jagatganj","Lallapura Khurd","Chhittupur","Jangambadi","Lahartara","Tulsipur","Pandey Haweli","Nadesar","Laksha","Ramapura","Reori Talab","Habibpura","Chetganj","Saray Gowardhan","Lahagpura","Ishwargangi"],
        "Varunapar" : ["Pandeypur","Dithori Mahal","Raja Bazar","Hukulganj","Akatha","Sarsauli","Sikraul","Narayanpur","Khajuri","Paharia","Nadesar","Jagatganj","Ramareypur","Nai Basti","Chowka Ghat","Lahartara","Shivpur","Danialpur","Tarna","Indrapur","Sarnath"],
        "Adampur" : ["Rajghat","Zalalipura","Dhoopchandi","Kaji Sadullapura","Jamaluddinpura","Alaipura","Koniya","Saraiya","Onkaleshwar","Nawapura","Kamalgaraha","","Rasoolpura"],
        "Kotwali" : ["Piyari Kala","Dashashwamedh","Ishwargangi","Hadha","Beniya","Goladinanath","Madhyameshwar","Katuapura"]
    }
    document.getElementById("zone").onchange = find_wards;
    function find_wards(){
        var e = document.getElementById("zone");
        var get_zone = e.options[e.selectedIndex].text;
        findWards(allWards[get_zone]);
    }
    
    function findWards(response) {
        ele=document.getElementById("ward");
        for (let i = 0; i < response.length; i++) {
            let li=document.createElement('option');
            li.value=response[i];
            li.innerText=response[i];
            ele.appendChild(li);
        }

    }
    document.getElementById("ward").onchange = find_locality;
    function find_locality(){
        var e = document.getElementById("ward");
        var get_ward = e.options[e.selectedIndex].text;
        fetch('/api/ward/'+get_ward).then(async (response) => {
            response = await response.json();
            findLocality(response);
        });
    }
    
    function findLocality(response) {
        ele=document.getElementById("locality");
        for (let i = 0; i < response.length; i++) {
            let li=document.createElement('option');
            li.value=response[i];
            li.innerText=response[i];
            ele.appendChild(li);
        }

    }



    {{!-- display_bins --}}
    document.getElementById("locality").onchange = find_bins;
    
    function find_bins(){
        const form = document.getElementById("assignTaskForm");
        const submitBtn = document.getElementById("submitBtn");
        var e = document.getElementById("locality");
        var get_locality = e.options[e.selectedIndex].text;
        var get_user = document.getElementById("employee_name").options[document.getElementById("employee_name").selectedIndex].value;
        console.log(get_user);
        form.setAttribute('action', '/admin/route/'+get_user+'/'+get_locality);
        submitBtn.removeAttribute('disabled');
    }

    {{!-- adding bar graph --}}
    fetch('/api/EmployeeId').then(async(response)=>{
        {{!-- console.log("ids") --}}
        response=await response.json();
        console.log('resp',response)
        labels=new Set();
        res_ids=new Set();
        data_incomplete=new Array();
        data_complete=new Array();
        filled_bins=new Array();
        empty_bins=new Array();
        zones = ['Bhelupur', 'Dashaswamedh', 'Varunapar', 'Adampur', 'Kotwali'];
        
        for(let i=0;i<response.length;i++){
            res_ids.add(response[i]._id);
            labels.add(response[i].firstName);
        }
        console.log('ab',res_ids,labels)
        for(let i=0;i<Array.from(res_ids).length;i++){
            fetch('/api/analyticsTasksData/'+Array.from(res_ids)[i]).then(async (res) => {
                res = await res.json();
                {{!-- console.log(res) --}}
                data_incomplete.push(res["incompleteTasks"]);
                data_complete.push(res["completedTasks"])
            }); 
        }
        fetch('/api/analyticsQueryData').then(async(res)=>{
            res= await res.json();
            totalQueries=res["totalQueries"]
            resolvedQueries=res["resolvedQueries"]
        })
        var res2;
        fetch('/api/analyticsBinData').then(async(res2)=>{
            res2= await res2.json();
            console.log(res2[zones[0]])
            for(let i=0;i<5;i++){
                filled_bins.push(res2[zones[i]]["filled"])
                empty_bins.push(res2[zones[i]]["empty"])
            }
        })
        setTimeout(()=>{
            var ctx = document.getElementById('myChart').getContext('2d');
            var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: Array.from(labels),
                datasets: [{
                    label: 'Incomplete tasks of different employees',
                    data: data_incomplete,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                indexAxis: 'y',
            }
        });
        labels_pie=["totalQueries","resolvedQueries"]
        var ctx = document.getElementById('myChart1').getContext('2d');
            var myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: labels_pie,
                datasets: [{
                    label: 'Incomplete tasks of different employees',
                    data: [totalQueries,resolvedQueries],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Query status'
                    }
                }
            },
        });
        var ctx = document.getElementById('myChart2').getContext('2d');
            var myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: zones,
                datasets: [{
                    label: 'Incomplete tasks of different employees',
                    data: filled_bins,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Filled bins status'
                    }
                }
            },
        });
        var ctx = document.getElementById('myChart3').getContext('2d');
            var myChart = new Chart(ctx, {
            type: 'pie',
            data: {
                labels: zones,
                datasets: [{
                    label: 'Incomplete tasks of different employees',
                    data: empty_bins,
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Empty bins status'
                    }
                }
            },
        });
        loading.style.display = "none";
        },5000);
    });
      
    
</script>